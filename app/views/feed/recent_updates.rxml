
xml.instruct!

xml.rss "version" => "2.0", "xmlns:dc" => "http://purl.org/dc/elements/1.1/" do
  xml.channel do

    xml.title       "ClojureDocs.org Recent Updates"
    xml.link        "http://clojuredocs.org"
    xml.pubDate     CGI.rfc1123_date @recent.first.updated_at if @recent.any?
    xml.description "Recently updated examples and comments from ClojureDocs.org."

    @recent.each do |r|
      
      title = ""
      body = ""
      author = r.user.login
      link = ""
      description = ""
      pub_date = ""
      f = nil
      new_or_updated = (r.created_at == r.updated_at) ? "New" : "Updated"
      
      if r.instance_of? Comment
        f = Function.find(r.commentable_id)
        title = "#{new_or_updated} comment on #{f.namespace.name}/#{f.name} by #{author}."
        body = r.body
      elsif r.instance_of? Example
        f = r.function
        title = "#{new_or_updated} example for #{f.namespace.name}/#{f.name} by #{author}."
        body = r.body
      elsif r.instance_of? SeeAlso
        f = r.from_function
        title = "New see also for #{f.namespace.name}/#{f.name} by #{author}."        
      end
      
      link = "http://clojuredocs.org#{f.href}"
      
      author = r.user.login
      xml.item do
        xml.title       title
        xml.link        link
        xml.description body.gsub("\n", "<br />").gsub(" ", "&nbsp;")
        xml.pubDate     CGI.rfc1123_date r.updated_at
        #xml.guid        url_for :only_path => false, :controller => 'posts', :action => 'show', :id => post.id
        #xml.author      "#{post.author.email} (#{post.author.name})"
      end
    end

  end
end